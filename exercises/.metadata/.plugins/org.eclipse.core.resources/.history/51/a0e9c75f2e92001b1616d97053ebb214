package conference;

import java.util.Date;
import java.util.Set;
import java.util.TreeSet;

import Person.Person;

public class Meeting implements Comparable<Meeting>{
	
	private Long id;
	private Date beggingTime;
	private Date endTime; 
	private Set<Person> attendants;
	public Meeting(Long id, Date beggingTime, Date endTime) {
		super();
		this.id = id;
		this.beggingTime = beggingTime;
		this.endTime = endTime;
		this.attendants = new TreeSet<Person>();
	}
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public Date getBeggingTime() {
		return beggingTime;
	}
	public void setBeggingTime(Date beggingTime) {
		this.beggingTime = beggingTime;
	}
	public Date getEndTime() {
		return endTime;
	}
	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}
	public Set<Person> getAttendants() {
		return attendants;
	}
	public void setAttendants(Set<Person> attendants) {
		this.attendants = attendants;
	}
	
	public void addAtendant(Person p) {
		attendants.add(p);
	}
	@Override
	public int compareTo(Meeting m) {
		return this.id.compareTo(m.getId());
	}
	public boolean overlap(Meeting newM) {
		return ((newM.getBeggingTime().before(getEndTime()) && newM.getBeggingTime().after(getBeggingTime()))
				|| (newM.getEndTime().before(getEndTime()) && newM.getEndTime().after(getBeggingTime()))
				|| (newM.getBeggingTime().before(getBeggingTime()) && newM.getEndTime().after(getEndTime()))
				|| newM.getBeggingTime().equals(getBeggingTime()) || newM.getEndTime().equals(getEndTime()) ) ;
	}
	

}
